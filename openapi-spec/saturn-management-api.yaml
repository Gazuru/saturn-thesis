openapi: 3.0.3
info:
  title: Saturn
  description: This is the API description of the 'management' module of the Saturn educational portal.
  version: 0.0.1
servers:
  - url: http://localhost:8200/api
    description: Local environment
paths:
  /v1/user:
    get:
      parameters:
        - in: query
          name: saturnCode
          schema:
            type: string
      tags:
        - User
      operationId: getUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /v1/teachers:
    get:
      tags:
        - User
      operationId: getTeachers
      parameters:
        - name: teacherUuids
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /v1/students:
    get:
      tags:
        - User
      operationId: getStudents
      parameters:
        - name: studentUuids
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /v1/requests:
    get:
      tags:
        - Request
      operationId: getRequests
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestOfStudent'
    post:
      tags:
        - Request
      operationId: createRequest
      requestBody:
        content:
          application/json:
            schema:
              properties:
                requestType:
                  type: string
                  enum:
                    - FAIRNESS
                    - DISMISSAL
                    - SUBJECT
                    - OTHER
                description:
                  type: string
                comment:
                  type: string
      responses:
        "200":
          description: Successful operation
  /v1/requests/{requestUuid}:
    put:
      tags:
        - Request
      operationId: updateRequest
      parameters:
        - name: requestUuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
                comment:
                  type: string
                status:
                  type: string
                  enum:
                    - NEW
                    - IN_PROGRESS
                    - REQUESTER_FEEDBACK
                    - IN_REVIEW
                    - ACCEPTED
                    - DENIED
      responses:
        "200":
          description: Successful operation
  /v1/my-requests:
    get:
      tags:
        - Request
      operationId: getMyRequests
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestOfManager'

components:
  schemas:
    User:
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        saturnCode:
          type: string
        dateOfBirth:
          type: string
          format: date
        locationOfBirth:
          type: string
        studentInformation:
          $ref: '#/components/schemas/Student'
        teacherInformation:
          $ref: '#/components/schemas/Teacher'
        managerInformation:
          $ref: '#/components/schemas/Manager'
    Student:
      properties:
        id:
          type: string
          format: uuid
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        degree:
          type: string
          enum:
            - COMPSCI_BSC
            - ELECTR_BSC
            - COMPSCI_MSC
            - ELECTR_MSC
    Teacher:
      properties:
        id:
          type: string
          format: uuid
    Manager:
      properties:
        id:
          type: string
          format: uuid
    RequestOfStudent:
      properties:
        requestType:
          type: string
          enum:
            - FAIRNESS
            - DISMISSAL
            - SUBJECT
            - OTHER
        status:
          type: string
          enum:
            - NEW
            - IN_PROGRESS
            - REQUESTER_FEEDBACK
            - IN_REVIEW
            - ACCEPTED
            - DENIED
        assignee:
          type: string
        description:
          type: string
        comment:
          type: string
    RequestOfManager:
      properties:
        id:
          type: string
          format: uuid
        requestType:
          type: string
          enum:
            - FAIRNESS
            - DISMISSAL
            - SUBJECT
            - OTHER
        status:
          type: string
          enum:
            - NEW
            - IN_PROGRESS
            - REQUESTER_FEEDBACK
            - IN_REVIEW
            - ACCEPTED
            - DENIED
        description:
          type: string
        comment:
          type: string
        requesterName:
          type: string
    Document:
      properties:
        type:
          type: string
          enum:
            - ID_CARD
            - STUDENT_ID_CARD
            - TAX_ID_CARD
        identifier:
          type: string
        studentId:
          type: string